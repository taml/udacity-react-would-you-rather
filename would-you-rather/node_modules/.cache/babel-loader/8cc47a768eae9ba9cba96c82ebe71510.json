{"ast":null,"code":"var _jsxFileName = \"/Users/tam/React/reactnd-project-would-you-rather-starter/would-you-rather/src/components/Dashboard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Nav from './Nav';\nimport Question from './Question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      unansweredSelected: true,\n      answeredSelected: false\n    };\n\n    this.handleUnansweredView = e => {\n      e.preventDefault();\n      this.setState(() => ({\n        unansweredSelected: true,\n        answeredSelected: false\n      }));\n    };\n\n    this.handleAnsweredView = e => {\n      e.preventDefault();\n      this.setState(() => ({\n        unansweredSelected: false,\n        answeredSelected: true\n      }));\n    };\n  }\n\n  render() {\n    const {\n      authedUser,\n      questions,\n      users,\n      unansweredQuestions,\n      answeredQuestions\n    } = this.props;\n    const {\n      unansweredSelected,\n      answeredSelected\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleUnansweredView,\n        children: \"Unanswered Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleAnsweredView,\n        children: \"Answered Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 90\n      }, this), unansweredSelected === true && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Unanswered Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), unansweredQuestions.map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Question, {\n            question: question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)\n        }, question.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 50\n      }, this), answeredSelected === true && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Answered Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), answeredQuestions.map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Would you rather...? \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 50\n          }, this), question.author, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 49\n          }, this), question.timestamp, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 52\n          }, this), question.optionOne.text, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 57\n          }, this), question.optionTwo.text, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 57\n          }, this)]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  questions,\n  users\n}) {\n  const answeredQuestionsId = Object.keys(users[authedUser].answers).map(answer => questions[answer].id);\n  const answeredQuestions = Object.keys(users[authedUser].answers).map(answer => questions[answer]).sort((questionA, questionB) => questionB.timestamp - questionA.timestamp);\n  const unansweredQuestions = Object.values(questions).filter(question => !answeredQuestionsId.includes(question.id)).sort((questionA, questionB) => questionB.timestamp - questionA.timestamp);\n  console.log(answeredQuestions);\n  console.log(unansweredQuestions);\n  return {\n    authedUser,\n    questions,\n    users,\n    unansweredQuestions,\n    answeredQuestions\n  };\n}\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["/Users/tam/React/reactnd-project-would-you-rather-starter/would-you-rather/src/components/Dashboard.js"],"names":["React","Component","connect","Nav","Question","Dashboard","state","unansweredSelected","answeredSelected","handleUnansweredView","e","preventDefault","setState","handleAnsweredView","render","authedUser","questions","users","unansweredQuestions","answeredQuestions","props","map","question","id","author","timestamp","optionOne","text","optionTwo","mapStateToProps","answeredQuestionsId","Object","keys","answers","answer","sort","questionA","questionB","values","filter","includes","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Nav from './Nav'\nimport Question from './Question'\n\nclass Dashboard extends Component {\n\n    state = {\n        unansweredSelected: true,\n        answeredSelected: false,\n    }\n\n    handleUnansweredView = (e) => {\n        e.preventDefault()\n        this.setState(() => ({\n            unansweredSelected: true,\n            answeredSelected: false,\n        }))\n    }\n\n    handleAnsweredView = (e) => {\n        e.preventDefault()\n        this.setState(() => ({\n            unansweredSelected: false,\n            answeredSelected: true,\n        }))\n    }\n\n    render() {\n        const { authedUser, questions, users, unansweredQuestions, answeredQuestions } = this.props\n        const { unansweredSelected, answeredSelected } = this.state\n        return(\n            <div>\n                <Nav />\n                <button onClick={this.handleUnansweredView}>Unanswered Questions</button><button onClick={this.handleAnsweredView}>Answered Questions</button>\n                { unansweredSelected === true && <div>\n                    <h3>Unanswered Questions</h3>\n                    { unansweredQuestions.map((question) => \n                        <li key={question.id}>\n                            <Question question={question} />\n                        </li>\n                ) }\n                </div> }\n                { answeredSelected === true && <div>\n                    <h3>Answered Questions</h3>\n                    { answeredQuestions.map((question) => \n                        <li key={question.id}>\n                            Would you rather...? <br></br>\n                            { question.author } <br></br>\n                            { question.timestamp } <br></br>\n                            { question.optionOne.text } <br></br>\n                            { question.optionTwo.text } <br></br>\n                        </li>\n                    ) }\n                </div> }\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps({ authedUser, questions, users })  {\n\n    const answeredQuestionsId = Object.keys(users[authedUser].answers).map((answer) => questions[answer].id)\n    const answeredQuestions = Object.keys(users[authedUser].answers).map((answer) => questions[answer])\n        .sort((questionA, questionB) => questionB.timestamp - questionA.timestamp)\n    const unansweredQuestions = Object.values(questions).filter((question) => !answeredQuestionsId.includes(question.id))\n        .sort((questionA, questionB) => questionB.timestamp - questionA.timestamp)\n    \n    console.log(answeredQuestions)\n    console.log(unansweredQuestions)\n\n    return {\n        authedUser, \n        questions,\n        users,\n        unansweredQuestions,\n        answeredQuestions,\n    }\n}\n\nexport default connect(mapStateToProps)(Dashboard)"]},"metadata":{},"sourceType":"module"}