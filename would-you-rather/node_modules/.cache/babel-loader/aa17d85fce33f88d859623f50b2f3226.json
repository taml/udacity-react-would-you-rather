{"ast":null,"code":"var _jsxFileName = \"/Users/tam/React/reactnd-project-would-you-rather-starter/would-you-rather/src/components/Question.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { formatDate } from '../utils/helper';\nimport { handleAnswerQuestion } from '../actions/shared';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Question extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.answerColor = color => color === true ? 'red' : 'black';\n\n    this.percentageOfVoters = (noAnswers, noOfUsers) => Math.round(noAnswers / noOfUsers * 100);\n\n    this.handleSe = e => {\n      const optionOne = e.target.value;\n      this.setState(() => ({\n        optionOne\n      }));\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        dispatch\n      } = this.props;\n      dispatch(handleAnswerQuestion());\n    };\n  }\n\n  render() {\n    const {\n      question,\n      authorAvatar,\n      answeredQOne,\n      answeredQTwo,\n      noOfUsers\n    } = this.props;\n    const {\n      author,\n      timestamp\n    } = question;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Would you rather...?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `By ${author}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        width: \"100\",\n        height: \"100\",\n        src: authorAvatar,\n        alt: `${author} Avatar`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: `Posted on ${formatDate(timestamp)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), (answeredQOne === !true || answeredQTwo === !true) && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"Male\",\n            checked: this.state.selectedOption === \"Male\",\n            onChange: this.onValueChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 32\n          }, this), question.optionOne.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), (answeredQOne === true || answeredQTwo === true) && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: this.answerColor(answeredQOne)\n          },\n          children: question.optionOne.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [question.optionOne.votes.length, \" Answers\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [this.percentageOfVoters(question.optionOne.votes.length, noOfUsers), \" % of Users have selected this option\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: this.answerColor(answeredQTwo)\n          },\n          children: question.optionTwo.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [question.optionTwo.votes.length, \" Answers\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [this.percentageOfVoters(question.optionTwo.votes.length, noOfUsers), \" % of Users have selected this option\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  questions,\n  users\n}, {\n  id\n}) {\n  const question = Object.values(questions).filter(question => question.id === id);\n  const authorAvatar = users[question[0].author].avatarURL;\n  const answeredOne = question[0].optionOne.votes.filter(vote => vote === authedUser);\n  const answeredTwo = question[0].optionTwo.votes.filter(vote => vote === authedUser);\n  return {\n    question: question[0],\n    authorAvatar,\n    answeredQOne: answeredOne.length === 1,\n    answeredQTwo: answeredTwo.length === 1,\n    noOfUsers: Object.values(users).length\n  };\n}\n\nexport default connect(mapStateToProps)(Question);","map":{"version":3,"sources":["/Users/tam/React/reactnd-project-would-you-rather-starter/would-you-rather/src/components/Question.js"],"names":["React","Component","connect","formatDate","handleAnswerQuestion","Question","answerColor","color","percentageOfVoters","noAnswers","noOfUsers","Math","round","handleSe","e","optionOne","target","value","setState","handleSubmit","preventDefault","dispatch","props","render","question","authorAvatar","answeredQOne","answeredQTwo","author","timestamp","state","selectedOption","onValueChange","text","votes","length","optionTwo","mapStateToProps","authedUser","questions","users","id","Object","values","filter","avatarURL","answeredOne","vote","answeredTwo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { formatDate } from '../utils/helper'\nimport { handleAnswerQuestion } from '../actions/shared'\n\nclass Question extends Component {\n\n    answerColor = (color) => color === true ? 'red' : 'black'\n\n    percentageOfVoters = (noAnswers, noOfUsers) => Math.round((noAnswers / noOfUsers) * 100) \n\n    handleSe = (e) => {\n        const optionOne = e.target.value\n        this.setState(() => ({\n            optionOne\n        }))\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n\n        const { dispatch } = this.props\n        dispatch(handleAnswerQuestion())\n    }\n    \n\n    render() {\n        const { question, authorAvatar, answeredQOne, answeredQTwo, noOfUsers } = this.props\n        const { author, timestamp } = question\n        return(\n            <div>\n                <h3>Would you rather...?</h3>\n                <p>{`By ${author}`}</p>\n                <img width=\"100\" height=\"100\" src={authorAvatar} alt={`${author} Avatar`} />\n                <p>{`Posted on ${formatDate(timestamp)}`}</p>\n                {(answeredQOne === !true || answeredQTwo === !true) && \n                    <form onSubmit={this.handleSubmit}>\n                        <label><input type=\"radio\" value=\"Male\" checked={this.state.selectedOption === \"Male\"}\n                                onChange={this.onValueChange} />{question.optionOne.text}</label>\n                    </form>\n                }\n                {(answeredQOne === true || answeredQTwo === true) && \n                    <div>\n                        <p style={{color: this.answerColor(answeredQOne)}}>{question.optionOne.text}</p>\n                        <p>{question.optionOne.votes.length} Answers</p>\n                        <p>{this.percentageOfVoters(question.optionOne.votes.length, noOfUsers)} % of Users have selected this option</p>\n                        <p style={{color: this.answerColor(answeredQTwo)}}>{ question.optionTwo.text }</p>\n                        <p>{question.optionTwo.votes.length} Answers</p>\n                        <p>{this.percentageOfVoters(question.optionTwo.votes.length, noOfUsers)} % of Users have selected this option</p>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps({ authedUser, questions, users }, { id }){\n    const question = Object.values(questions).filter((question) => question.id === id)\n    const authorAvatar = users[question[0].author].avatarURL\n    const answeredOne = question[0].optionOne.votes.filter((vote) => vote === authedUser)\n    const answeredTwo = question[0].optionTwo.votes.filter((vote) => vote === authedUser)\n    return {\n        question: question[0], \n        authorAvatar,\n        answeredQOne: answeredOne.length === 1,\n        answeredQTwo: answeredTwo.length === 1,\n        noOfUsers: Object.values(users).length\n    }\n} \n\nexport default connect(mapStateToProps)(Question)"]},"metadata":{},"sourceType":"module"}