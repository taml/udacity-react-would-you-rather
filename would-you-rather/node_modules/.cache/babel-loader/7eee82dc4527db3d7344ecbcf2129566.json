{"ast":null,"code":"var _jsxFileName = \"/Users/tam/React/reactnd-project-would-you-rather-starter/would-you-rather/src/components/Question.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { formatDate } from '../utils/helper';\nimport { Link, withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Question extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.answerColor = color => {\n      return color === true ? 'red' : 'black';\n    };\n\n    this.percentageOfVoters = (noAnswers, noOfUsers) => {\n      return Math.round(noAnswers / noOfUsers * 100);\n    };\n  }\n\n  render() {\n    const {\n      question,\n      authorAvatar,\n      answeredQOne,\n      answeredQTwo,\n      noOfUsers\n    } = this.props;\n    const {\n      id,\n      author,\n      timestamp\n    } = question;\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/question/${id}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Would you rather...?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `By ${author}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          width: \"100\",\n          height: \"100\",\n          src: authorAvatar,\n          alt: `${author} Avatar`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `Posted on ${formatDate(timestamp)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: this.answerColor(answeredQOne)\n          },\n          children: question.optionOne.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), answeredQOne === true && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [question.optionOne.votes.length, \" Answers\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [this.percentageOfVoters(question.optionOne.votes.length, noOfUsers), \" % of Users have answered this question\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: this.answerColor(answeredQTwo)\n          },\n          children: question.optionTwo.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), answeredQTwo === true && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [question.optionOne.votes.length, \" Answers\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [this.percentageOfVoters(question.optionOne.votes.length, noOfUsers), \" % of Users have answered this question\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  questions,\n  users\n}, {\n  id\n}) {\n  const question = Object.values(questions).filter(question => question.id === id);\n  const authorAvatar = users[question[0].author].avatarURL;\n  const answeredOne = question[0].optionOne.votes.filter(vote => vote === authedUser);\n  const answeredTwo = question[0].optionTwo.votes.filter(vote => vote === authedUser);\n  return {\n    question: question[0],\n    authorAvatar,\n    answeredQOne: answeredOne.length === 1,\n    answeredQTwo: answeredTwo.length === 1,\n    noOfUsers: Object.values(users).length\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(Question));","map":{"version":3,"sources":["/Users/tam/React/reactnd-project-would-you-rather-starter/would-you-rather/src/components/Question.js"],"names":["React","Component","connect","formatDate","Link","withRouter","Question","answerColor","color","percentageOfVoters","noAnswers","noOfUsers","Math","round","render","question","authorAvatar","answeredQOne","answeredQTwo","props","id","author","timestamp","optionOne","text","votes","length","optionTwo","mapStateToProps","authedUser","questions","users","Object","values","filter","avatarURL","answeredOne","vote","answeredTwo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { formatDate } from '../utils/helper'\nimport { Link, withRouter } from 'react-router-dom'\n\nclass Question extends Component {\n\n    answerColor = (color) => {\n        return color === true ? 'red' : 'black'\n    }\n\n    percentageOfVoters = (noAnswers, noOfUsers) => {\n        return Math.round((noAnswers / noOfUsers) * 100) \n    }\n\n    render() {\n        const { question, authorAvatar, answeredQOne, answeredQTwo, noOfUsers } = this.props\n        const { id, author, timestamp } = question\n        return(\n            <Link to={`/question/${id}`}>\n                <div>\n                    <h3>Would you rather...?</h3>\n                        <p>{`By ${author}`}</p>\n                        <img width=\"100\" height=\"100\" src={authorAvatar} alt={`${author} Avatar`} />\n                        <p>{`Posted on ${formatDate(timestamp)}`}</p>\n                        <p style={{color: this.answerColor(answeredQOne)}}>{ question.optionOne.text }</p>\n                        {answeredQOne === true && \n                            <div>\n                                <p>{question.optionOne.votes.length} Answers</p>\n                                <p>{this.percentageOfVoters(question.optionOne.votes.length, noOfUsers)} % of Users have answered this question</p>\n                            </div>\n                        }\n                        <p style={{color: this.answerColor(answeredQTwo)}}>{ question.optionTwo.text }</p>\n                        {answeredQTwo === true && \n                            <div>\n                                <p>{question.optionOne.votes.length} Answers</p>\n                                <p>{this.percentageOfVoters(question.optionOne.votes.length, noOfUsers)} % of Users have answered this question</p>\n                            </div>\n                        }\n                </div>\n            </Link>\n        )\n    }\n}\n\nfunction mapStateToProps({ authedUser, questions, users }, { id }){\n    const question = Object.values(questions).filter((question) => question.id === id)\n    const authorAvatar = users[question[0].author].avatarURL\n    const answeredOne = question[0].optionOne.votes.filter((vote) => vote === authedUser)\n    const answeredTwo = question[0].optionTwo.votes.filter((vote) => vote === authedUser)\n    return {\n        question: question[0], \n        authorAvatar,\n        answeredQOne: answeredOne.length === 1,\n        answeredQTwo: answeredTwo.length === 1,\n        noOfUsers: Object.values(users).length\n    }\n} \n\nexport default withRouter(connect(mapStateToProps)(Question))"]},"metadata":{},"sourceType":"module"}