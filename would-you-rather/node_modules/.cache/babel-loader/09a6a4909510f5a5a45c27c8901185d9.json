{"ast":null,"code":"var _jsxFileName = \"/Users/tam/React/reactnd-project-would-you-rather-starter/would-you-rather/src/components/Question.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { formatDate } from '../utils/helper';\nimport { Link, withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Question extends Component {\n  render() {\n    const {\n      question,\n      authorAvatar\n    } = this.props;\n    const {\n      id,\n      author,\n      timestamp\n    } = question;\n    return /*#__PURE__*/_jsxDEV(Link, {\n      to: `/question/${id}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Would you rather...?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `By ${author}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          width: \"100\",\n          height: \"100\",\n          src: authorAvatar,\n          alt: `${author} Avatar`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `Posted on ${formatDate(timestamp)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.optionOne.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.optionTwo.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  questions,\n  users\n}, {\n  id\n}) {\n  const question = Object.values(questions).filter(question => question.id === id);\n  const authorAvatar = users[question[0].author].avatarURL;\n  const answeredQuestionsId = Object.keys(users[authedUser].answers).map(answer => questions[answer].id);\n  const answered = answeredQuestionsId.filter();\n  return {\n    question: question[0],\n    authorAvatar\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(Question));","map":{"version":3,"sources":["/Users/tam/React/reactnd-project-would-you-rather-starter/would-you-rather/src/components/Question.js"],"names":["React","Component","connect","formatDate","Link","withRouter","Question","render","question","authorAvatar","props","id","author","timestamp","optionOne","text","optionTwo","mapStateToProps","authedUser","questions","users","Object","values","filter","avatarURL","answeredQuestionsId","keys","answers","map","answer","answered"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAC7BM,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA6B,KAAKC,KAAxC;AACA,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,MAAN;AAAcC,MAAAA;AAAd,QAA4BL,QAAlC;AACA,wBACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,aAAYG,EAAG,EAA1B;AAAA,6BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEQ;AAAA,oBAAK,MAAKC,MAAO;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAFR,eAGQ;AAAK,UAAA,KAAK,EAAC,KAAX;AAAiB,UAAA,MAAM,EAAC,KAAxB;AAA8B,UAAA,GAAG,EAAEH,YAAnC;AAAiD,UAAA,GAAG,EAAG,GAAEG,MAAO;AAAhE;AAAA;AAAA;AAAA;AAAA,gBAHR,eAIQ;AAAA,oBAAK,aAAYT,UAAU,CAACU,SAAD,CAAY;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAJR,eAKQ;AAAA,oBAAKL,QAAQ,CAACM,SAAT,CAAmBC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBALR,eAMQ;AAAA,oBAAKP,QAAQ,CAACQ,SAAT,CAAmBD;AAAxB;AAAA;AAAA;AAAA;AAAA,gBANR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAhB4B;;AAmBjC,SAASE,eAAT,CAAyB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,SAAd;AAAyBC,EAAAA;AAAzB,CAAzB,EAA2D;AAAET,EAAAA;AAAF,CAA3D,EAAkE;AAC9D,QAAMH,QAAQ,GAAGa,MAAM,CAACC,MAAP,CAAcH,SAAd,EAAyBI,MAAzB,CAAiCf,QAAD,IAAcA,QAAQ,CAACG,EAAT,KAAgBA,EAA9D,CAAjB;AACA,QAAMF,YAAY,GAAGW,KAAK,CAACZ,QAAQ,CAAC,CAAD,CAAR,CAAYI,MAAb,CAAL,CAA0BY,SAA/C;AACA,QAAMC,mBAAmB,GAAGJ,MAAM,CAACK,IAAP,CAAYN,KAAK,CAACF,UAAD,CAAL,CAAkBS,OAA9B,EAAuCC,GAAvC,CAA4CC,MAAD,IAAYV,SAAS,CAACU,MAAD,CAAT,CAAkBlB,EAAzE,CAA5B;AACA,QAAMmB,QAAQ,GAAGL,mBAAmB,CAACF,MAApB,EAAjB;AACA,SAAO;AACHf,IAAAA,QAAQ,EAAEA,QAAQ,CAAC,CAAD,CADf;AAEHC,IAAAA;AAFG,GAAP;AAIH;;AAED,eAAeJ,UAAU,CAACH,OAAO,CAACe,eAAD,CAAP,CAAyBX,QAAzB,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { formatDate } from '../utils/helper'\nimport { Link, withRouter } from 'react-router-dom'\n\nclass Question extends Component {\n    render() {\n        const { question, authorAvatar } = this.props\n        const { id, author, timestamp } = question\n        return(\n            <Link to={`/question/${id}`}>\n                <div>\n                    <h3>Would you rather...?</h3>\n                        <p>{`By ${author}`}</p>\n                        <img width=\"100\" height=\"100\" src={authorAvatar} alt={`${author} Avatar`} />\n                        <p>{`Posted on ${formatDate(timestamp)}`}</p>\n                        <p>{ question.optionOne.text }</p>\n                        <p>{ question.optionTwo.text }</p>\n                </div>\n            </Link>\n        )\n    }\n}\n\nfunction mapStateToProps({ authedUser, questions, users }, { id }){\n    const question = Object.values(questions).filter((question) => question.id === id)\n    const authorAvatar = users[question[0].author].avatarURL\n    const answeredQuestionsId = Object.keys(users[authedUser].answers).map((answer) => questions[answer].id)\n    const answered = answeredQuestionsId.filter()\n    return {\n        question: question[0], \n        authorAvatar,\n    }\n} \n\nexport default withRouter(connect(mapStateToProps)(Question))"]},"metadata":{},"sourceType":"module"}