{"ast":null,"code":"var _jsxFileName = \"/Users/tam/React/reactnd-project-would-you-rather-starter/would-you-rather/src/components/Dashboard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Nav from './Nav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Dashboard extends Component {\n  render() {\n    const {\n      authedUser,\n      questions,\n      users,\n      unansweredQuestions,\n      answeredQuestions\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Unanswered Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), unansweredQuestions.map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Would you rather...? \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 46\n        }, this), question.author, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 45\n        }, this), question.timestamp, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 48\n        }, this), question.optionOne.text, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 53\n        }, this), question.optionTwo.text, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 53\n        }, this)]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Answered Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), unansweredQuestions.map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Would you rather...? \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 46\n        }, this), question.author, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 45\n        }, this), question.timestamp, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 48\n        }, this), question.optionOne.text, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 53\n        }, this), question.optionTwo.text]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  questions,\n  users\n}) {\n  const answeredQuestionsId = Object.keys(users[authedUser].answers).map(answer => questions[answer].id);\n  const answeredQuestions = Object.keys(users[authedUser].answers).map(answer => questions[answer]).sort((questionA, questionB) => questionB.timestamp - questionA.timestamp);\n  const unansweredQuestions = Object.values(questions).filter(question => !answeredQuestionsId.includes(question.id)).sort((questionA, questionB) => questionB.timestamp - questionA.timestamp);\n  console.log(answeredQuestions);\n  console.log(unansweredQuestions);\n  return {\n    authedUser,\n    questions,\n    users,\n    unansweredQuestions,\n    answeredQuestions\n  };\n}\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["/Users/tam/React/reactnd-project-would-you-rather-starter/would-you-rather/src/components/Dashboard.js"],"names":["React","Component","connect","Nav","Dashboard","render","authedUser","questions","users","unansweredQuestions","answeredQuestions","props","map","question","author","timestamp","optionOne","text","optionTwo","id","mapStateToProps","answeredQuestionsId","Object","keys","answers","answer","sort","questionA","questionB","values","filter","includes","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Nav from './Nav'\n\nclass Dashboard extends Component {\n    render() {\n        const { authedUser, questions, users, unansweredQuestions, answeredQuestions } = this.props\n        return(\n            <div>\n                <Nav />\n                <h3>Unanswered Questions</h3>\n                { unansweredQuestions.map((question) => \n                    <li key={question.id}>\n                        Would you rather...? <br></br>\n                        { question.author } <br></br>\n                        { question.timestamp } <br></br>\n                        { question.optionOne.text } <br></br>\n                        { question.optionTwo.text } <br></br>\n                    </li>\n                ) }\n                <h3>Answered Questions</h3>\n                { unansweredQuestions.map((question) => \n                    <li key={question.id}>\n                        Would you rather...? <br></br>\n                        { question.author } <br></br>\n                        { question.timestamp } <br></br>\n                        { question.optionOne.text } <br></br>\n                        { question.optionTwo.text }\n                    </li>\n                ) }\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps({ authedUser, questions, users })  {\n\n    const answeredQuestionsId = Object.keys(users[authedUser].answers).map((answer) => questions[answer].id)\n    const answeredQuestions = Object.keys(users[authedUser].answers).map((answer) => questions[answer])\n        .sort((questionA, questionB) => questionB.timestamp - questionA.timestamp)\n    const unansweredQuestions = Object.values(questions).filter((question) => !answeredQuestionsId.includes(question.id))\n        .sort((questionA, questionB) => questionB.timestamp - questionA.timestamp)\n    \n    console.log(answeredQuestions)\n    console.log(unansweredQuestions)\n\n    return {\n        authedUser, \n        questions,\n        users,\n        unansweredQuestions,\n        answeredQuestions,\n    }\n}\n\nexport default connect(mapStateToProps)(Dashboard)"]},"metadata":{},"sourceType":"module"}