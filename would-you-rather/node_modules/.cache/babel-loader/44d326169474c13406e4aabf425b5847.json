{"ast":null,"code":"var _jsxFileName = \"/Users/tam/React/reactnd-project-would-you-rather-starter/would-you-rather/src/components/Dashboard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Nav from './Nav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Dashboard extends Component {\n  render() {\n    const {\n      authedUser,\n      questions,\n      users,\n      answeredQuestions\n    } = this.props;\n    console.log(unansweredQuestions);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), \"Dashboard\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  questions,\n  users\n}) {\n  const answeredQuestions = Object.keys(users[authedUser].answers).map(aId => questions[aId].id).sort((questionA, questionB) => questions[questionB].timestamp - questions[questionA.timestamp]);\n  return {\n    authedUser,\n    questions,\n    users,\n    answeredQuestions\n  };\n}\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["/Users/tam/React/reactnd-project-would-you-rather-starter/would-you-rather/src/components/Dashboard.js"],"names":["React","Component","connect","Nav","Dashboard","render","authedUser","questions","users","answeredQuestions","props","console","log","unansweredQuestions","mapStateToProps","Object","keys","answers","map","aId","id","sort","questionA","questionB","timestamp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAC9BI,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA,SAAd;AAAyBC,MAAAA,KAAzB;AAAgCC,MAAAA;AAAhC,QAAsD,KAAKC,KAAjE;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,mBAAZ;AACA,wBACI;AAAA,8BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAV6B;;AAalC,SAASC,eAAT,CAAyB;AAAER,EAAAA,UAAF;AAAcC,EAAAA,SAAd;AAAyBC,EAAAA;AAAzB,CAAzB,EAA4D;AAExD,QAAMC,iBAAiB,GAAGM,MAAM,CAACC,IAAP,CAAYR,KAAK,CAACF,UAAD,CAAL,CAAkBW,OAA9B,EAAuCC,GAAvC,CAA4CC,GAAD,IAASZ,SAAS,CAACY,GAAD,CAAT,CAAeC,EAAnE,EACzBC,IADyB,CACpB,CAACC,SAAD,EAAYC,SAAZ,KAA0BhB,SAAS,CAACgB,SAAD,CAAT,CAAqBC,SAArB,GAAiCjB,SAAS,CAACe,SAAS,CAACE,SAAX,CADhD,CAA1B;AAGA,SAAO;AACHlB,IAAAA,UADG;AAEHC,IAAAA,SAFG;AAGHC,IAAAA,KAHG;AAIHC,IAAAA;AAJG,GAAP;AAMH;;AAED,eAAeP,OAAO,CAACY,eAAD,CAAP,CAAyBV,SAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Nav from './Nav'\n\nclass Dashboard extends Component {\n    render() {\n        const { authedUser, questions, users, answeredQuestions } = this.props\n        console.log(unansweredQuestions)\n        return(\n            <div>\n                <Nav />\n                Dashboard\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps({ authedUser, questions, users })  {\n\n    const answeredQuestions = Object.keys(users[authedUser].answers).map((aId) => questions[aId].id)\n    .sort((questionA, questionB) => questions[questionB].timestamp - questions[questionA.timestamp])\n\n    return {\n        authedUser, \n        questions,\n        users,\n        answeredQuestions,\n    }\n}\n\nexport default connect(mapStateToProps)(Dashboard)"]},"metadata":{},"sourceType":"module"}