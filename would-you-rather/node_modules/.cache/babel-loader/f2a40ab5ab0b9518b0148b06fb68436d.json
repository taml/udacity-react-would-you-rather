{"ast":null,"code":"import { getInitialData, saveQuestionAnswer, saveQuestion } from '../utils/api';\nimport { receiveUsers, addAnswerToUser } from '../actions/users';\nimport { addQuestion, receiveQuestions, answerQuestion } from '../actions/questions';\nimport { showLoading, hideLoading } from 'react-redux-loading';\nexport function handleInitialData() {\n  return dispatch => {\n    dispatch(showLoading());\n    return getInitialData().then(({\n      users,\n      questions\n    }) => {\n      dispatch(receiveUsers(users));\n      dispatch(receiveQuestions(questions));\n      dispatch(hideLoading());\n    });\n  };\n}\nexport function handleAddQuestion(optionOneText, optionTwoText) {\n  return (dispatch, getState) => {\n    const {\n      authedUser\n    } = getState();\n    dispatch(showLoading());\n    return saveQuestion({\n      author: authedUser,\n      optionOneText,\n      optionTwoText\n    }).then(question => dispatch(addQuestion(question))).then(() => dispatch(hideLoading()));\n  };\n}\nexport function handleAnswerQuestion(answer) {\n  return dispatch => {\n    dispatch(answerQuestion(answer));\n    return saveQuestionAnswer(answer).catch(e => {\n      console.warn('Error in handleAnswerQuestion: ', e);\n      alert('There was an error saving your answer. Try again.');\n    });\n  };\n}","map":{"version":3,"sources":["/Users/tam/React/reactnd-project-would-you-rather-starter/would-you-rather/src/actions/shared.js"],"names":["getInitialData","saveQuestionAnswer","saveQuestion","receiveUsers","addAnswerToUser","addQuestion","receiveQuestions","answerQuestion","showLoading","hideLoading","handleInitialData","dispatch","then","users","questions","handleAddQuestion","optionOneText","optionTwoText","getState","authedUser","author","question","handleAnswerQuestion","answer","catch","e","console","warn","alert"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,kBAAzB,EAA6CC,YAA7C,QAAiE,cAAjE;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,kBAA9C;AACA,SAASC,WAAT,EAAsBC,gBAAtB,EAAwCC,cAAxC,QAA8D,sBAA9D;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,qBAAzC;AAEA,OAAO,SAASC,iBAAT,GAA6B;AAChC,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACH,WAAW,EAAZ,CAAR;AACA,WAAOR,cAAc,GAChBY,IADE,CACG,CAAC;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAD,KAAwB;AAC1BH,MAAAA,QAAQ,CAACR,YAAY,CAACU,KAAD,CAAb,CAAR;AACAF,MAAAA,QAAQ,CAACL,gBAAgB,CAACQ,SAAD,CAAjB,CAAR;AACAH,MAAAA,QAAQ,CAACF,WAAW,EAAZ,CAAR;AACH,KALE,CAAP;AAMH,GARD;AASH;AAED,OAAO,SAASM,iBAAT,CAA2BC,aAA3B,EAA0CC,aAA1C,EAAyD;AAC5D,SAAO,CAACN,QAAD,EAAWO,QAAX,KAAwB;AAC3B,UAAM;AAAEC,MAAAA;AAAF,QAAiBD,QAAQ,EAA/B;AACAP,IAAAA,QAAQ,CAACH,WAAW,EAAZ,CAAR;AACA,WAAON,YAAY,CAAC;AAChBkB,MAAAA,MAAM,EAAED,UADQ;AAEhBH,MAAAA,aAFgB;AAGhBC,MAAAA;AAHgB,KAAD,CAAZ,CAKNL,IALM,CAKAS,QAAD,IAAcV,QAAQ,CAACN,WAAW,CAACgB,QAAD,CAAZ,CALrB,EAMNT,IANM,CAMD,MAAMD,QAAQ,CAACF,WAAW,EAAZ,CANb,CAAP;AAOH,GAVD;AAWH;AAED,OAAO,SAASa,oBAAT,CAA8BC,MAA9B,EAAsC;AACzC,SAAQZ,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACJ,cAAc,CAACgB,MAAD,CAAf,CAAR;AACA,WAAOtB,kBAAkB,CAACsB,MAAD,CAAlB,CACNC,KADM,CACCC,CAAD,IAAO;AACVC,MAAAA,OAAO,CAACC,IAAR,CAAa,iCAAb,EAAgDF,CAAhD;AACAG,MAAAA,KAAK,CAAC,mDAAD,CAAL;AACH,KAJM,CAAP;AAKH,GAPD;AAQH","sourcesContent":["import { getInitialData, saveQuestionAnswer, saveQuestion } from '../utils/api'\nimport { receiveUsers, addAnswerToUser } from '../actions/users'\nimport { addQuestion, receiveQuestions, answerQuestion } from '../actions/questions'\nimport { showLoading, hideLoading } from 'react-redux-loading'\n\nexport function handleInitialData() {\n    return (dispatch) => {\n        dispatch(showLoading())\n        return getInitialData()\n            .then(({users, questions}) => {\n                dispatch(receiveUsers(users))\n                dispatch(receiveQuestions(questions))\n                dispatch(hideLoading())\n            })\n    }\n}\n\nexport function handleAddQuestion(optionOneText, optionTwoText) {\n    return (dispatch, getState) => {\n        const { authedUser } = getState()\n        dispatch(showLoading())\n        return saveQuestion({\n            author: authedUser,\n            optionOneText,\n            optionTwoText,\n        })\n        .then((question) => dispatch(addQuestion(question)))\n        .then(() => dispatch(hideLoading()))\n    }\n}\n\nexport function handleAnswerQuestion(answer) {\n    return (dispatch) => {\n        dispatch(answerQuestion(answer))\n        return saveQuestionAnswer(answer)\n        .catch((e) => {\n            console.warn('Error in handleAnswerQuestion: ', e)\n            alert('There was an error saving your answer. Try again.')\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}